services:
  # Backend API service
  - type: web
    name: sagradago-backend
    env: node
    buildCommand: cd server && npm install
    startCommand: cd server && node server.js
    envVars:
      - key: PORT
        value: 5001
      - key: NODE_ENV
        value: production
      - key: GEMINI_API_KEY
        value: AIzaSyD9WcznatZQhYpUAndm5Vw00zsXejdlOm8
      - key: REACT_SUPABASE_SERVICE_ROLE_KEY
        value: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImpianF4eGZhb3J4dGl0dm1wb3RwIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0Nzc0NTI4OSwiZXhwIjoyMDYzMzIxMjg5fQ.hnqcbF1neIvCtmvprBAob15aWLlfyUQ9MRIX03rQgzs
      - key: REACT_APP_SUPABASE_URL
        value: https://jbjqxxfaorxtitvmpotp.supabase.co/
    headers:
      - path: /*
        name: Access-Control-Allow-Origin
        value: https://sagradago.online
      - path: /*
        name: Access-Control-Allow-Methods
        value: GET, POST, OPTIONS
      - path: /*
        name: Access-Control-Allow-Headers
        value: Content-Type, Authorization

  # Frontend service
  - type: web
    name: sagradago-frontend
    env: static
    buildCommand: npm install && npm run build
    staticPublishPath: build
    routes:
      # Serve static files first
      - type: rewrite
        source: /static/*
        destination: /static/*
      # API rewrite rule - Updated to match CORS configuration
      - type: rewrite
        source: /api/:path*
        destination: https://sagradago-backend.onrender.com/api/:path*
      # Handle client-side routing
      - type: rewrite
        source: /*
        destination: /index.html
    headers:
      - path: /*
        name: Cache-Control
        value: no-cache
      - path: /static/*
        name: Cache-Control
        value: public, max-age=31536000, immutable